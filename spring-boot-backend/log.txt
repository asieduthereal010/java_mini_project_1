spring-boot:run
[INFO] Scanning for projects...
[INFO]
[INFO] --------------------------< com.example:demo >--------------------------
[INFO] Building demo 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO]
[INFO] >>> spring-boot:3.5.3:run (default-cli) > test-compile @ demo >>>
[INFO]
[INFO] --- resources:3.3.1:resources (default-resources) @ demo ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO]
[INFO] --- compiler:3.14.0:compile (default-compile) @ demo ---
[INFO] Nothing to compile - all classes are up to date.
[INFO]
[INFO] --- resources:3.3.1:testResources (default-testResources) @ demo ---
[INFO] skip non existing resourceDirectory /home/nana-yaw-asiedu/Projects/java_mini_project_1/spring-boot-backend/src/test/resources
[INFO]
[INFO] --- compiler:3.14.0:testCompile (default-testCompile) @ demo ---
[INFO] Nothing to compile - all classes are up to date.
[INFO]
[INFO] <<< spring-boot:3.5.3:run (default-cli) < test-compile @ demo <<<
[INFO]
[INFO]
[INFO] --- spring-boot:3.5.3:run (default-cli) @ demo ---
[INFO] Attaching agents: []
  ____                            _         ____              _
 / ___|  ___ _ __   __ _ _ __   | |       | __ )  ___   ___ | |_
 \___ \ / _ \ '_ \ / _` | '_ \  | |       |  _ \ / _ \ / _ \| __|
  ___) |  __/ | | | (_| | | | | | |___    | |_) | (_) | (_) | |_
 |____/ \___|_| |_|\__,_|_| |_| |_____|   |____/ \___/ \___/ \__|

:: Spring Boot ::  (v3.5.3)
:: Student Management System ::
:: Starting Application... ::
2025-08-05 02:48:54 - Starting DemoApplication using Java 21.0.7 with PID 33499 (/home/nana-yaw-asiedu/Projects/java_mini_project_1/spring-boot-backend/target/classes started by nana-yaw-asiedu in /home/nana-yaw-asiedu/Projects/java_mini_project_1/spring-boot-backend)
2025-08-05 02:48:54 - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-05 02:48:54 - No active profile set, falling back to 1 default profile: "default"
2025-08-05 02:48:54 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-05 02:48:54 - Finished Spring Data repository scanning in 35 ms. Found 9 JPA repository interfaces.
2025-08-05 02:48:55 - Tomcat initialized with port 7070 (http)
2025-08-05 02:48:55 - Starting service [Tomcat]
2025-08-05 02:48:55 - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-05 02:48:55 - Initializing Spring embedded WebApplicationContext
2025-08-05 02:48:55 - Root WebApplicationContext: initialization completed in 579 ms
2025-08-05 02:48:55 - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-05 02:48:55 - HHH000412: Hibernate ORM core version 6.6.18.Final
2025-08-05 02:48:55 - HHH000026: Second-level cache disabled
2025-08-05 02:48:55 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-05 02:48:55 - HikariPool-1 - Starting...
2025-08-05 02:48:55 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2ad2b274
2025-08-05 02:48:55 - HikariPool-1 - Start completed.
2025-08-05 02:48:55 - HHH10001005: Database info:
        Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
        Database driver: undefined/unknown
        Database version: 17.5
        Autocommit mode: undefined/unknown
        Isolation level: undefined/unknown
        Minimum pool size: undefined/unknown
        Maximum pool size: undefined/unknown
2025-08-05 02:48:56 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-05 02:48:56 -
    alter table if exists course_lecturer_assistants
       alter column lecturer_assistant_id set data type bigint
Hibernate:
    alter table if exists course_lecturer_assistants
       alter column lecturer_assistant_id set data type bigint
2025-08-05 02:48:56 - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table if exists course_lecturer_assistants
       alter column lecturer_assistant_id set data type bigint" via JDBC [ERROR: column "lecturer_assistant_id" cannot be cast automatically to type bigint
  Hint: You might need to specify "USING lecturer_assistant_id::bigint".]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table if exists course_lecturer_assistants
       alter column lecturer_assistant_id set data type bigint" via JDBC [ERROR: column "lecturer_assistant_id" cannot be cast automatically to type bigint
  Hint: You might need to specify "USING lecturer_assistant_id::bigint".]
        at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
        at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
        at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
        at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
        at java.base/java.util.HashMap.forEach(HashMap.java:1429)
        at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
        at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
        at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
        at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
        at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
        at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
        at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
        at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
        at com.example.demo.DemoApplication.main(DemoApplication.java:23)
Caused by: org.postgresql.util.PSQLException: ERROR: column "lecturer_assistant_id" cannot be cast automatically to type bigint
  Hint: You might need to specify "USING lecturer_assistant_id::bigint".
        at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
        at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
        at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
        at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
        at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
        at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
        at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
        at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
        at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
        at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
        at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
        at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
        ... 37 common frames omitted
2025-08-05 02:48:56 -
    alter table if exists teacher_assistants
       alter column id set data type bigint
Hibernate:
    alter table if exists teacher_assistants
       alter column id set data type bigint
2025-08-05 02:48:56 - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table if exists teacher_assistants
       alter column id set data type bigint" via JDBC [ERROR: column "id" cannot be cast automatically to type bigint
  Hint: You might need to specify "USING id::bigint".]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table if exists teacher_assistants
       alter column id set data type bigint" via JDBC [ERROR: column "id" cannot be cast automatically to type bigint
  Hint: You might need to specify "USING id::bigint".]
        at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
        at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
        at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
        at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
        at java.base/java.util.HashMap.forEach(HashMap.java:1429)
        at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
        at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
        at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
        at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
        at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
        at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
        at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
        at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
        at com.example.demo.DemoApplication.main(DemoApplication.java:23)
Caused by: org.postgresql.util.PSQLException: ERROR: column "id" cannot be cast automatically to type bigint
  Hint: You might need to specify "USING id::bigint".
        at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
        at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
        at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
        at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
        at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
        at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
        at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
        at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
        at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
        at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
        at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
        at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
        ... 37 common frames omitted
2025-08-05 02:48:56 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 02:48:56 - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-05 02:48:56 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-05 02:48:56 -

Using generated security password: e92bf535-1a1b-4930-a7c7-240061542ba3

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-05 02:48:56 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-08-05 02:48:56 - 🔧 Configuring CORS settings...
2025-08-05 02:48:56 - ✅ CORS configured successfully
2025-08-05 02:48:56 - 🌐 Allowed origin patterns: All (*)
2025-08-05 02:48:56 - 📝 Allowed methods: GET, POST, PUT, DELETE, OPTIONS, PATCH
2025-08-05 02:48:56 - 🔑 Allowed headers: All (*)
2025-08-05 02:48:56 - 🍪 Credentials: Enabled
2025-08-05 02:48:56 - 💡 Using allowedOriginPatterns for security with credentials
2025-08-05 02:48:56 - 19 mappings in 'requestMappingHandlerMapping'
2025-08-05 02:48:56 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-05 02:48:56 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-05 02:48:56 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-05 02:48:56 - Tomcat started on port 7070 (http) with context path '/'
2025-08-05 02:48:56 - Started DemoApplication in 2.512 seconds (process running for 2.635)
2025-08-05 02:48:56 - ✅ Application is ready and running!
2025-08-05 02:48:56 - 🌐 Server started on: http://localhost:8080
2025-08-05 02:48:56 - 📊 Student Dashboard: http://localhost:8080/dashboard/students
2025-08-05 02:48:56 - 👨‍🏫 Lecturer Dashboard: http://localhost:8080/dashboard/lecturers
2025-08-05 02:48:56 - 🗄️  Database: PostgreSQL (software_engineering)
2025-08-05 02:48:56 - ============================================================
2025-08-05 02:48:56 - 🎯 APPLICATION STARTUP COMPLETE
2025-08-05 02:48:56 - ============================================================
2025-08-05 02:48:56 - 📅 Started at: 2025-08-05 02:48:56
2025-08-05 02:48:56 - 🏷️  Application Name: demo
2025-08-05 02:48:56 - 🌐 Server Port: 7070
2025-08-05 02:48:56 - 🗄️  Database URL: jdbc:postgresql://localhost:5432/software_engineering
2025-08-05 02:48:56 - 👤 Database User: postgres
2025-08-05 02:48:56 - 🔧 JPA DDL Mode: update
2025-08-05 02:48:56 - ============================================================
2025-08-05 02:48:56 - 🚀 Starting Student Management System...
2025-08-05 02:48:56 - 📚 Spring Boot version: 3.5.3
2025-08-05 02:48:56 - ☕ Java version: 21
  ____                            _         ____              _
 / ___|  ___ _ __   __ _ _ __   | |       | __ )  ___   ___ | |_
 \___ \ / _ \ '_ \ / _` | '_ \  | |       |  _ \ / _ \ / _ \| __|
  ___) |  __/ | | | (_| | | | | | |___    | |_) | (_) | (_) | |_
 |____/ \___|_| |_|\__,_|_| |_| |_____|   |____/ \___/ \___/ \__|

:: Spring Boot ::  (v3.5.3)
:: Student Management System ::
:: Starting Application... ::
2025-08-05 02:48:56 - Starting DemoApplication using Java 21.0.7 with PID 33499 (/home/nana-yaw-asiedu/Projects/java_mini_project_1/spring-boot-backend/target/classes started by nana-yaw-asiedu in /home/nana-yaw-asiedu/Projects/java_mini_project_1/spring-boot-backend)
2025-08-05 02:48:56 - Running with Spring Boot v3.5.3, Spring v6.2.8
2025-08-05 02:48:56 - No active profile set, falling back to 1 default profile: "default"
2025-08-05 02:48:57 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-05 02:48:57 - Finished Spring Data repository scanning in 5 ms. Found 9 JPA repository interfaces.
2025-08-05 02:48:57 - Tomcat initialized with port 7070 (http)
2025-08-05 02:48:57 - Starting service [Tomcat]
2025-08-05 02:48:57 - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-05 02:48:57 - Initializing Spring embedded WebApplicationContext
2025-08-05 02:48:57 - Root WebApplicationContext: initialization completed in 106 ms
2025-08-05 02:48:57 - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-05 02:48:57 - HHH000026: Second-level cache disabled
2025-08-05 02:48:57 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-05 02:48:57 - HikariPool-2 - Starting...
2025-08-05 02:48:57 - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@678a7489
2025-08-05 02:48:57 - HikariPool-2 - Start completed.
2025-08-05 02:48:57 - HHH10001005: Database info:
        Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
        Database driver: undefined/unknown
        Database version: 17.5
        Autocommit mode: undefined/unknown
        Isolation level: undefined/unknown
        Minimum pool size: undefined/unknown
        Maximum pool size: undefined/unknown
2025-08-05 02:48:57 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-05 02:48:57 -
    alter table if exists course_lecturer_assistants
       alter column lecturer_assistant_id set data type bigint
Hibernate:
    alter table if exists course_lecturer_assistants
       alter column lecturer_assistant_id set data type bigint
2025-08-05 02:48:57 - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table if exists course_lecturer_assistants
       alter column lecturer_assistant_id set data type bigint" via JDBC [ERROR: column "lecturer_assistant_id" cannot be cast automatically to type bigint
  Hint: You might need to specify "USING lecturer_assistant_id::bigint".]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table if exists course_lecturer_assistants
       alter column lecturer_assistant_id set data type bigint" via JDBC [ERROR: column "lecturer_assistant_id" cannot be cast automatically to type bigint
  Hint: You might need to specify "USING lecturer_assistant_id::bigint".]
        at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
        at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
        at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
        at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
        at java.base/java.util.HashMap.forEach(HashMap.java:1429)
        at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
        at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
        at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
        at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
        at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
        at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
        at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
        at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
        at com.example.demo.DemoApplication.main(DemoApplication.java:29)
Caused by: org.postgresql.util.PSQLException: ERROR: column "lecturer_assistant_id" cannot be cast automatically to type bigint
  Hint: You might need to specify "USING lecturer_assistant_id::bigint".
        at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
        at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
        at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
        at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
        at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
        at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
        at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
        at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
        at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
        at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
        at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
        at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
        ... 37 common frames omitted
2025-08-05 02:48:57 -
    alter table if exists teacher_assistants
       alter column id set data type bigint
Hibernate:
    alter table if exists teacher_assistants
       alter column id set data type bigint
2025-08-05 02:48:57 - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table if exists teacher_assistants
       alter column id set data type bigint" via JDBC [ERROR: column "id" cannot be cast automatically to type bigint
  Hint: You might need to specify "USING id::bigint".]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table if exists teacher_assistants
       alter column id set data type bigint" via JDBC [ERROR: column "id" cannot be cast automatically to type bigint
  Hint: You might need to specify "USING id::bigint".]
        at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)
        at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)
        at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)
        at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)
        at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
        at java.base/java.util.HashMap.forEach(HashMap.java:1429)
        at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
        at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
        at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
        at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
        at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
        at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
        at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
        at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
        at com.example.demo.DemoApplication.main(DemoApplication.java:29)
Caused by: org.postgresql.util.PSQLException: ERROR: column "id" cannot be cast automatically to type bigint
  Hint: You might need to specify "USING id::bigint".
        at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
        at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
        at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
        at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
        at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
        at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
        at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
        at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
        at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
        at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
        at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
        at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
        ... 37 common frames omitted
2025-08-05 02:48:57 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 02:48:57 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-05 02:48:57 -

Using generated security password: a15fb657-34bd-4c7c-9230-8579369a9392

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-05 02:48:57 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-08-05 02:48:57 - 🔧 Configuring CORS settings...
2025-08-05 02:48:57 - ✅ CORS configured successfully
2025-08-05 02:48:57 - 🌐 Allowed origin patterns: All (*)
2025-08-05 02:48:57 - 📝 Allowed methods: GET, POST, PUT, DELETE, OPTIONS, PATCH
2025-08-05 02:48:57 - 🔑 Allowed headers: All (*)
2025-08-05 02:48:57 - 🍪 Credentials: Enabled
2025-08-05 02:48:57 - 💡 Using allowedOriginPatterns for security with credentials
2025-08-05 02:48:57 - 19 mappings in 'requestMappingHandlerMapping'
2025-08-05 02:48:57 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-05 02:48:57 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-05 02:48:57 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-05 02:48:57 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-08-05 02:48:57 - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 02:48:57 - HikariPool-2 - Shutdown initiated...
2025-08-05 02:48:57 - HikariPool-2 - Shutdown completed.
2025-08-05 02:48:57 -

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-05 02:48:57 -

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 7070 was already in use.

Action:

Identify and stop the process that's listening on port 7070 or configure this application to listen on another port.

